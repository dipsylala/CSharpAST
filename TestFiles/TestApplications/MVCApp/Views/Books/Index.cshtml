@model BookListViewModel
@{
    ViewData["Title"] = "Books Library";
}

<div class="container">
    <!-- Page Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h1 class="display-5 fw-bold text-primary mb-2">Book Library</h1>
            <p class="text-muted">
                @if (!string.IsNullOrEmpty(Model.SearchTerm))
                {
                    <span>Search results for "<strong>@Model.SearchTerm</strong>" - </span>
                }
                @if (!string.IsNullOrEmpty(Model.SelectedGenre))
                {
                    <span>Genre: <strong>@Model.SelectedGenre</strong> - </span>
                }
                <span>@Model.TotalBooks book(s) found</span>
            </p>
        </div>
        <div>
            <a asp-controller="Home" asp-action="Index" class="btn btn-outline-primary">
                <i class="fas fa-home me-2"></i>Back to Home
            </a>
        </div>
    </div>

    <!-- Search and Filter Section -->
    <div class="row mb-4">
        <div class="col-lg-8">
            <div class="card shadow-sm">
                <div class="card-body">
                    <form asp-action="Index" method="get" class="row g-3">
                        <div class="col-md-6">
                            <label for="searchTerm" class="form-label">Search Books</label>
                            <input type="text" name="searchTerm" id="searchTerm" class="form-control" 
                                   value="@Model.SearchTerm" placeholder="Enter title, author, or description..." />
                        </div>
                        <div class="col-md-4">
                            <label for="genre" class="form-label">Filter by Genre</label>
                            <select name="genre" id="genre" class="form-select">
                                <option value="">All Genres</option>
                                @foreach (var genre in Model.AvailableGenres)
                                {
                                    <option value="@genre" selected="@(genre == Model.SelectedGenre)">@genre</option>
                                }
                            </select>
                        </div>
                        <div class="col-md-2 d-flex align-items-end">
                            <button type="submit" class="btn btn-primary w-100">
                                <i class="fas fa-search me-1"></i>Search
                            </button>
                        </div>
                        @if (!string.IsNullOrEmpty(Model.SearchTerm) || !string.IsNullOrEmpty(Model.SelectedGenre))
                        {
                            <div class="col-12">
                                <a asp-action="Index" class="btn btn-outline-secondary btn-sm">
                                    <i class="fas fa-times me-1"></i>Clear Filters
                                </a>
                            </div>
                        }
                    </form>
                </div>
            </div>
        </div>
        <div class="col-lg-4">
            <div class="card bg-light">
                <div class="card-body text-center">
                    <h6 class="card-title">Quick Genre Filter</h6>
                    <div class="d-flex flex-wrap gap-2 justify-content-center">
                        @foreach (var genre in Model.AvailableGenres.Take(4))
                        {
                            <a asp-action="Index" asp-route-genre="@genre" 
                               class="badge @(genre == Model.SelectedGenre ? "bg-primary" : "bg-secondary") text-decoration-none">
                                @genre
                            </a>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Books Grid -->
    @if (Model.Books.Any())
    {
        <div class="row">
            @foreach (var book in Model.Books)
            {
                <div class="col-lg-4 col-md-6 mb-4">
                    <div class="card h-100 shadow-sm book-item" data-book-id="@book.Id">
                        <div class="card-img-top bg-light d-flex align-items-center justify-content-center" style="height: 200px;">
                            <img src="@book.CoverImageUrl" alt="@book.Title" class="img-fluid" style="max-height: 180px;" />
                        </div>
                        <div class="card-body d-flex flex-column">
                            <div class="d-flex justify-content-between align-items-start mb-2">
                                <span class="badge bg-info">@book.Genre</span>
                                <small class="text-muted">@book.PublishedYear</small>
                            </div>
                            
                            <h5 class="card-title">@book.Title</h5>
                            <p class="card-text text-muted mb-2">
                                <i class="fas fa-user me-1"></i>@book.Author
                            </p>
                            
                            <p class="card-text flex-grow-1 small">
                                @(book.Description.Length > 150 ? 
                                  book.Description.Substring(0, 150) + "..." : 
                                  book.Description)
                            </p>
                            
                            <div class="mt-auto">
                                <div class="d-flex justify-content-between align-items-center mb-2">
                                    <span class="fw-bold text-primary fs-5">@book.FormattedPrice</span>
                                    <small class="text-muted">
                                        <i class="fas fa-file-alt me-1"></i>@book.PageCount pages
                                    </small>
                                </div>
                                
                                <div class="d-grid gap-2">
                                    <a asp-controller="Books" asp-action="Details" asp-route-id="@book.Id" 
                                       class="btn btn-primary">
                                        <i class="fas fa-eye me-1"></i>View Details
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- Pagination -->
        @if (Model.TotalPages > 1)
        {
            <nav aria-label="Book pagination" class="mt-4">
                <ul class="pagination justify-content-center">
                    @if (Model.CurrentPage > 1)
                    {
                        <li class="page-item">
                            <a class="page-link" asp-action="Index" 
                               asp-route-searchTerm="@Model.SearchTerm" 
                               asp-route-genre="@Model.SelectedGenre" 
                               asp-route-page="@(Model.CurrentPage - 1)">Previous</a>
                        </li>
                    }
                    
                    @for (int i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 2); i++)
                    {
                        <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                            <a class="page-link" asp-action="Index" 
                               asp-route-searchTerm="@Model.SearchTerm" 
                               asp-route-genre="@Model.SelectedGenre" 
                               asp-route-page="@i">@i</a>
                        </li>
                    }
                    
                    @if (Model.CurrentPage < Model.TotalPages)
                    {
                        <li class="page-item">
                            <a class="page-link" asp-action="Index" 
                               asp-route-searchTerm="@Model.SearchTerm" 
                               asp-route-genre="@Model.SelectedGenre" 
                               asp-route-page="@(Model.CurrentPage + 1)">Next</a>
                        </li>
                    }
                </ul>
            </nav>
        }
    }
    else
    {
        <!-- No Results -->
        <div class="text-center py-5">
            <div class="mb-4">
                <i class="fas fa-search fa-3x text-muted mb-3"></i>
                <h3 class="text-muted">No Books Found</h3>
                <p class="text-muted">
                    @if (!string.IsNullOrEmpty(Model.SearchTerm) || !string.IsNullOrEmpty(Model.SelectedGenre))
                    {
                        <span>No books match your current search criteria.</span>
                    }
                    else
                    {
                        <span>No books are currently available in the library.</span>
                    }
                </p>
            </div>
            
            @if (!string.IsNullOrEmpty(Model.SearchTerm) || !string.IsNullOrEmpty(Model.SelectedGenre))
            {
                <div class="d-flex gap-3 justify-content-center">
                    <a asp-action="Index" class="btn btn-primary">View All Books</a>
                    <a asp-controller="Home" asp-action="Index" class="btn btn-outline-primary">Back to Home</a>
                </div>
            }
        </div>
    }
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Animate book items on hover
            $('.book-item').hover(
                function() { 
                    $(this).addClass('shadow-lg').css('transform', 'translateY(-5px)'); 
                },
                function() { 
                    $(this).removeClass('shadow-lg').css('transform', 'translateY(0)'); 
                }
            );
            
            // Auto-submit form when genre changes
            $('#genre').change(function() {
                $(this).closest('form').submit();
            });
            
            // Focus search input on page load if no search term
            if ($('#searchTerm').val() === '') {
                $('#searchTerm').focus();
            }
        });
    </script>
}

<style>
    .book-item {
        transition: all 0.3s ease;
        border: none;
    }
    
    .book-item:hover {
        cursor: pointer;
    }
    
    .badge {
        font-size: 0.7em;
    }
    
    .pagination .page-link {
        color: #007bff;
    }
    
    .pagination .page-item.active .page-link {
        background-color: #007bff;
        border-color: #007bff;
    }
</style>
